# (15 points)
#
## Complete the function below to use Newton's method to find square root of number,
## iterating till the approximation error is < threshold
## Note: Newton's method is an iterative guessing algorithm in which, 
## to calculate the square root of a number n,  we start with an initial guess = n/2, 
## and each subsequent guess is computed using the formula: 
## guess = (1/2) * (guess + (n/guess)). The function returns the final value of guess. 
#
fun sqrt(number, threshold) {
	# initial guess
	guess = number / 2;
	
	
	while (abs((guess * guess) - number) > threshold){
		guess = (guess + number / guess) / 2
	}
	
	
	return guess;	
}
## MAKE NO CHANGES BELOW
## MAKE NO CHANGES BELOW
## MAKE NO CHANGES BELOW
## MAKE NO CHANGES BELOW
fun abs(value) {
	if (value < 0) {
	   return (1-2)*value;
	}
	else {
	    return value;
	}
}

fun test(test_num, test_threshold) {
	
	test_result = sqrt(test_num, test_threshold);
    if (abs(test_result^2 - test_num) < test_threshold) {
    	return("sqrt: Test passed");
    }
    else {
    	return("sqrt: Test failed");
    }
}

fun main() 
{
	x = test(3, 0.0001);
	write(x);
	x = test(2, 0.001);
	write(x);
	x = test(7, 0.00001);
	write(x);
}