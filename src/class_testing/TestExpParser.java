package class_testing;

import class_helper.FileProcessor;
import class_helper.ParseTree;
import class_parser.JiffyParser;

public class TestExpParser {
	private static int testNumber = 1;

	public static void main(String[] args) throws Exception {
		testEquals(parseTest(FileProcessor.readProgramFile("whileTest.jif")), "\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                                                          1.0\n                                                                                     -....|\n                                                                                          a\n                                                                                =....|\n                                                                                     a\n                                                                  stmnt_list....|\n                                                                                         \"Hello world\"\n                                                                                write....|\n                                                         block....|\n                                                while....|\n                                                              0.0\n                                                         >....|\n                                                              a\n                                                     10.0\n                                                =....|\n                                                     a\n                         block....|\n           fun main()....|\nprogram....|");

		testEquals(parseTest(FileProcessor.readProgramFile("exp1.jif")),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                          3.0\n                                                     +....|\n                                                          2.0\n                                                =....|\n                                                     a\n                         block....|\n           fun main()....|\nprogram....|");

		testEquals(parseTest(FileProcessor.readProgramFile("exp2.jif")),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                               4.0\n                                                          *....|\n                                                               3.0\n                                                     +....|\n                                                          2.0\n                                                =....|\n                                                     b\n                         block....|\n           fun main()....|\nprogram....|");

		testEquals(parseTest(FileProcessor.readProgramFile("exp3.jif")),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                          4.0\n                                                     *....|\n                                                               3.0\n                                                          +....|\n                                                               2.0\n                                                =....|\n                                                     c\n                         block....|\n           fun main()....|\nprogram....|");

		testEquals(parseTest("fun main(){d=(2+3)*(4-6);}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                               6.0\n                                                          -....|\n                                                               4.0\n                                                     *....|\n                                                               3.0\n                                                          +....|\n                                                               2.0\n                                                =....|\n                                                     d\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){e=2^3;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                          3.0\n                                                     ^....|\n                                                          2.0\n                                                =....|\n                                                     e\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){f=2^3^2;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                               2.0\n                                                          ^....|\n                                                               3.0\n                                                     ^....|\n                                                          2.0\n                                                =....|\n                                                     f\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){g=2+3*2^2;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                                    2.0\n                                                               ^....|\n                                                                    2.0\n                                                          *....|\n                                                               3.0\n                                                     +....|\n                                                          2.0\n                                                =....|\n                                                     g\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){h=2^3/2*2;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                          2.0\n                                                     *....|\n                                                               2.0\n                                                          /....|\n                                                                    3.0\n                                                               ^....|\n                                                                    2.0\n                                                =....|\n                                                     h\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){num1 = 2+3/2^2$3/2*4+2^3;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                                    3.0\n                                                               ^....|\n                                                                    2.0\n                                                          +....|\n                                                                    4.0\n                                                               *....|\n                                                                         2.0\n                                                                    /....|\n                                                                         3.0\n                                                     $....|\n                                                                         2.0\n                                                                    ^....|\n                                                                         2.0\n                                                               /....|\n                                                                    3.0\n                                                          +....|\n                                                               2.0\n                                                =....|\n                                                     num1\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){num2 = 2^(2^2$3^1);}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                                    1.0\n                                                               ^....|\n                                                                    3.0\n                                                          $....|\n                                                                    2.0\n                                                               ^....|\n                                                                    2.0\n                                                     ^....|\n                                                          2.0\n                                                =....|\n                                                     num2\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){num3 = 2^1^2$3^1;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                               1.0\n                                                          ^....|\n                                                               3.0\n                                                     $....|\n                                                                    2.0\n                                                               ^....|\n                                                                    1.0\n                                                          ^....|\n                                                               2.0\n                                                =....|\n                                                     num3\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){num4 = (2+3)/2^(2$3)/2*(4+2)^3;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                               3.0\n                                                          ^....|\n                                                                    2.0\n                                                               +....|\n                                                                    4.0\n                                                     *....|\n                                                               2.0\n                                                          /....|\n                                                                              3.0\n                                                                         $....|\n                                                                              2.0\n                                                                    ^....|\n                                                                         2.0\n                                                               /....|\n                                                                         3.0\n                                                                    +....|\n                                                                         2.0\n                                                =....|\n                                                     num4\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){num5 = 1+2^3/4-5+6/2+(2-4)^2;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                               2.0\n                                                          ^....|\n                                                                    4.0\n                                                               -....|\n                                                                    2.0\n                                                     +....|\n                                                                    2.0\n                                                               /....|\n                                                                    6.0\n                                                          +....|\n                                                                    5.0\n                                                               -....|\n                                                                              4.0\n                                                                         /....|\n                                                                                   3.0\n                                                                              ^....|\n                                                                                   2.0\n                                                                    +....|\n                                                                         1.0\n                                                =....|\n                                                     num5\n                         block....|\n           fun main()....|\nprogram....|");
		testEquals(parseTest("fun main(){num6 = 1+2^3/4-5+6/2+(2-4)^2$6;}"),
				"\n                                                          \"None\"\n                                                return....|\n                                  stmnt_list....|\n                                                          6.0\n                                                     $....|\n                                                                    2.0\n                                                               ^....|\n                                                                         4.0\n                                                                    -....|\n                                                                         2.0\n                                                          +....|\n                                                                         2.0\n                                                                    /....|\n                                                                         6.0\n                                                               +....|\n                                                                         5.0\n                                                                    -....|\n                                                                                   4.0\n                                                                              /....|\n                                                                                        3.0\n                                                                                   ^....|\n                                                                                        2.0\n                                                                         +....|\n                                                                              1.0\n                                                =....|\n                                                     num6\n                         block....|\n           fun main()....|\nprogram....|");
	}

	private static String parseTest(String exp) {
		System.out.println(testNumber + ". Evaluating " + exp);
		JiffyParser jp = new JiffyParser(exp, false);

		ParseTree pt = jp.getAST();
		//System.out.println("testEquals(parseTest(\""+exp+"\""+"),"+"\""+pt.toString()+"\");");
		//System.out.print(pt.toString());

		return pt.toString();
	}

	private static void testEquals(String actual, String expected) {
		System.out.println("\n\tTest " + testNumber + " results");

		try {
			System.out.println("\n\t" + "Actual result = " + actual);
			System.out.println("\n\t" + "Expected result = " + expected);
			boolean result = actual.equals(expected);
			String message = "\tTest " + testNumber + " " + translate(actual.equals(expected));
			if (result)
				System.out.println(message);
			else
				System.err.println(message);
		} catch (Exception e) {
			System.err.println("\tTest " + testNumber + " failed");
		} finally {
			testNumber++;
		}
	}

	private static String translate(boolean b) {
		if (b)
			return "passed";
		else
			return "failed";
	}
}
